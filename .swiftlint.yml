#無効にするルール
disabled_rules:
  - line_length
  - identifier_name
  - function_body_length
  - switch_case_alignment
  - type_name
  - cyclomatic_complexity
  - nesting
  - force_try
  - force_cast
  - type_body_length #長いメソッドも多い
  - implicit_getter #set, getを書くときに必要
  - multiple_closures_with_trailing_closure # 複数のクロージャーの場合でも、trailing closureを利用したいため
  - function_parameter_count

#デフォルトルール以外でオプトインルールから採用するルール (全抽出している)
opt_in_rules:
  - anyobject_protocol
  - array_init
  - attributes
  - balanced_xctest_lifecycle
  - capture_variable
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  #- conditional_returns_on_newline # ガード文などは簡潔に一行で記述したいため
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discarded_notification_center_observer
  - discouraged_assert
  #- discouraged_object_literal #オブジェクトリテラルを使いたいため
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - expiring_todo
  #- explicit_acl #できる限りACLを省略したいため
  #- explicit_enum_raw_value # ローバリューを省略することもあるため
  - explicit_init
  #- explicit_self # 関数は `self.` を付けずに呼び出したいため
  #- explicit_top_level_acl # できる限りACLを省略したいため
  #- explicit_type_interface # 型推論を利用したいため
  #- extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name
  - file_name_no_space
  - file_types_order
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - ibinspectable_in_extension
  - identical_operands
  - implicit_return
  - implicitly_unwrapped_optional
  - indentation_width
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_objc_type
  - legacy_random
  #- let_var_whitespace # 空白行を設けたくないこともあるため
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - missing_docs
  - modifier_order
  #- multiline_arguments # 引数は同じ行に2つ入れたいこともあるため
  #- multiline_arguments_brackets # 括弧で行を増やしたくないため
  #- multiline_function_chains # 関数の呼び出しは同じ行に2つ入れたいこともあるため
  #- multiline_literal_brackets # 括弧で行を増やしたくないため
  #- multiline_parameters # 引数は同じ行に2つ入れたいこともあるため
  #- multiline_parameters_brackets  # 括弧で行を増やしたくないため
  - nimble_operator
  #- no_extension_access_modifier # エクステンションにACL(アクセス制限)を設定したいことがあるため
  #- no_grouping_extension # privateメソッドを記述するときにprivate extensionに書くのが好きなため
  - nslocalizedstring_key
  - nslocalizedstring_require_bundle
  #- number_separator # 数字を `_` で区切りたくないため
  #- object_literal # リテラルで生成したくないこともあるため
  - operator_usage_whitespace
  - optional_enum_case_matching
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_nimble
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - private_action
  - private_outlet
  - private_subject
  #- prohibited_interface_builder # ストーリーボードを使ってビューを生成したいため
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - raw_value_for_camel_cased_codable_enum
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  #- required_deinit # できる限りデイニシャライザを省略したいため
  - required_enum_case
  - single_test_class
  - sorted_first_last
  #- sorted_imports # インポート文をアルファベット順以外に並び替えたいこともあるため
  - static_operator
  #- strict_fileprivate # fileprivateを利用したいため
  #- strong_iboutlet # `@IBOutlet` を `weak` で定義したいこともあるため
  - switch_case_on_newline
  - test_case_accessibility
  - toggle_bool
  - trailing_closure
  - type_contents_order
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_declaration
  - unused_import
  - vertical_parameter_alignment_on_call
  #- vertical_whitespace_between_cases # Switch文のケース間に空白行を設けたくないこともあるため
  #- vertical_whitespace_closing_braces # 中括弧を閉じる前に空白行を設けたいことがあるため
  #- vertical_whitespace_opening_braces # 中括弧を開く前に空白行を設けたいことがあるため
  - xct_specific_matcher
  - yoda_condition

# Lintの対象に含めるパス デフォルトからフォルダ名を変更していない場合、プロジェクト名と同名のフォルダを指定すればいい
included:
  - LibrariesSample

# Lintの対象から除外するパス
excluded:
  - Pods
  - Carthage
  
file_length:
  - 800 # warning
  - 1000 # error

identifier_name:
  min_length:
    warning: 1 # `r` `g` `b` などを使いたいため

